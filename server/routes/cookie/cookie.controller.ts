import { FastifyRequest, FastifyReply } from 'fastify'

type Mode = 'safe' | 'unsafe'

interface IQuerystring {
  mode: Mode
}

const getCookie = (mode: Mode) => {
  if (mode === 'safe')
    return `safeSessionId=safe${Date.now()}; HttpOnly; Max-Age=3600; Same-site=Lax`
  else return `unsafeSessionId=unsafe${Date.now()}; Max-Age=3600; Same-site=Lax`
}

export const cookieHanddler = async (
  request: FastifyRequest<{ Querystring: IQuerystring }>,
  reply: FastifyReply
) => {
  const { mode } = request.query
  const cookie = getCookie(mode)

  return reply.header('set-cookie', cookie).send('')
}
