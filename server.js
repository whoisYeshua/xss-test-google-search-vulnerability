import Fastify from 'fastify'
import fastifyStatic from '@fastify/static'

import path from './path.js'

const app = Fastify({
  logger: {
    transport: {
      target: 'pino-pretty',
      options: { destination: 1 },
    },
  },
})

app.register(fastifyStatic, {
  root: path.publicPath,
})

app.get('/', async (request, reply) => {
  setImmediate(() => {
    reply.sendFile('index.html')
  })
  // return reply is needed to tell Fastify we will call
  // reply.send() in the future.
  return reply
})

app.get('/unsafe-cookie', async (request, reply) => {
  setImmediate(() => {
    reply
      .header('set-cookie', `unsafeSessionId=unsafe${Date.now()}; Max-Age=3600; Same-site=Lax`)
      .send('')
  })
  // return reply is needed to tell Fastify we will call
  // reply.send() in the future.
  return reply
})

app.get('/safe-cookie', async (request, reply) => {
  setImmediate(() => {
    reply
      .header(
        'set-cookie',
        `safeSessionId=safe${Date.now()}; HttpOnly; Max-Age=3600; Same-site=Lax`
      )
      .send('')
  })
  // return reply is needed to tell Fastify we will call
  // reply.send() in the future.
  return reply
})

const start = async () => {
  try {
    await app.listen({ port: 3000 })
  } catch (err) {
    app.log.error(err)
    process.exit(1)
  }
}
start()
